// Code generated by MockGen. DO NOT EDIT.
// Source: init.go

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	httprouter "github.com/julienschmidt/httprouter"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// Calc mocks base method.
func (m *MockClient) Calc(w http.ResponseWriter, r *http.Request, params httprouter.Params) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Calc", w, r, params)
}

// Calc indicates an expected call of Calc.
func (mr *MockClientMockRecorder) Calc(w, r, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Calc", reflect.TypeOf((*MockClient)(nil).Calc), w, r, params)
}
