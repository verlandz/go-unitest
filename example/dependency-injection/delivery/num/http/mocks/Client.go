// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/verlandz/go-unitest/example/dependency-injection/delivery/num/http (interfaces: Client)

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	httprouter "github.com/julienschmidt/httprouter"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// GetLuckyNumber mocks base method.
func (m *MockClient) GetLuckyNumber(arg0 http.ResponseWriter, arg1 *http.Request, arg2 httprouter.Params) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetLuckyNumber", arg0, arg1, arg2)
}

// GetLuckyNumber indicates an expected call of GetLuckyNumber.
func (mr *MockClientMockRecorder) GetLuckyNumber(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLuckyNumber", reflect.TypeOf((*MockClient)(nil).GetLuckyNumber), arg0, arg1, arg2)
}
